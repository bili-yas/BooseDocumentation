{
  "api/BiliyasMaharjan_ASE_Assignment.AppArray.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppArray.html",
    "title": "Class AppArray | Boose Project Documentation",
    "keywords": "Class AppArray Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents an application-specific implementation of the BOOSE Array class. public class AppArray : Array, ICommand Inheritance object Command Evaluation Array AppArray Implements ICommand Inherited Members Array.PEEK Array.POKE Array.type Array.rows Array.columns Array.valueInt Array.valueReal Array.intArray Array.realArray Array.pokeValue Array.peekVar Array.rowS Array.columnS Array.row Array.column Array.ArrayRestrictions() Array.ReduceRestrictionCounter() Array.Compile() Array.CheckParameters(string[]) Array.Execute() Array.ProcessArrayParametersCompile(bool) Array.ProcessArrayParametersExecute(bool) Array.SetIntArray(int, int, int) Array.SetRealArray(double, int, int) Array.GetIntArray(int, int) Array.GetRealArray(int, int) Array.Rows Array.Columns Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppArray() Initializes a new instances of the AppArray class. Decrements the restriction counter upon creation of new array. public AppArray()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppCall.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppCall.html",
    "title": "Class AppCall | Boose Project Documentation",
    "keywords": "Class AppCall Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a custom implementation of the Call class, Designed to override restrictions. public class AppCall : Call, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Call AppCall Implements ICommand Inherited Members Call.methodName Call.Compile() Call.Execute() CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppCall() Initializes a new instance of the AppCall class. Automatically reduces restrictions by invoking the ReduceRestrictions method. public AppCall() Methods Restrictions() Overrides the Restrictions method of Call class. public override void Restrictions()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppCanvas.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppCanvas.html",
    "title": "Class AppCanvas | Boose Project Documentation",
    "keywords": "Class AppCanvas Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Implements the ICanvas interface and provides the functionality to implemented methods to draw circle, rectangle, set colors, managing the canvas and pen properties and write on the canvas. public class AppCanvas : ICanvas Inheritance object AppCanvas Implements ICanvas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppCanvas() Initializes a new instance of AppCanvas class with default canvas size. public AppCanvas() Properties PenColour Gets or sets the color of the pen. public object PenColour { get; set; } Property Value object Xpos Gets or sets the current X position of the pen. public int Xpos { get; set; } Property Value int Ypos Gets or sets the current Y position of the pen. public int Ypos { get; set; } Property Value int Methods Circle(int, bool) Draws a circle at the current pen position. public void Circle(int radius, bool filled) Parameters radius int Integer value for radius. filled bool Boolean value for fill or not. Exceptions CanvasException Throws CanvasException when negative radius is given. Clear() Clears the canvas by changing it to default grey color. public void Clear() DrawTo(int, int) Draws a line from the given X coordinate to given Y coordinate. public void DrawTo(int toX, int toY) Parameters toX int Integer value for X coordinate. toY int Integer value for Y coordinate. Exceptions CanvasException Throw CanvasException if the given coordinates are out of bound or negative. MoveTo(int, int) Moves the pen position to the given X and Y coordinates. public void MoveTo(int x, int y) Parameters x int Integer value for X coordinate. y int Integer value for Y coordinate. Exceptions CanvasException Throws CanvasException if the given coordinates are out of bound or negative. Rect(int, int, bool) Draws a rectangle. public void Rect(int width, int height, bool filled) Parameters width int Integer value for width. height int Integer value for height. filled bool Boolean value for fill or not. Exceptions CanvasException Throws CanvasException if negative width or height given. Reset() Resets the pen position to the origin. public void Reset() Set(int, int) Sets the size of canvas and initializes pen position and graphics object. public void Set(int xsize, int ysize) Parameters xsize int ysize int SetColour(int, int, int) Sets the color of the pen using RGB value. public void SetColour(int red, int green, int blue) Parameters red int Value for red (0-255) green int Value for green (0-255) blue int Value for blue (0-255) Exceptions CanvasException Throws a CanvasException if any color component is out of range. Tri(int, int) Draws a triangle. public void Tri(int width, int height) Parameters width int Integer value for width. height int Integer value for height. Exceptions NotImplementedException WriteText(string) Writes text on screen. public void WriteText(string text) Parameters text string String text to be written on the canvas. getBitmap() Gets the bitmap representing the current canvas. public object getBitmap() Returns object A bitmap object of the canvas."
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppCircle.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppCircle.html",
    "title": "Class AppCircle | Boose Project Documentation",
    "keywords": "Class AppCircle Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll A command class for drawing circles on a canvas, supporting both filled and outlined styles. public class AppCircle : Circle, ICommand Inheritance object Command CanvasCommand CommandOneParameter Circle AppCircle Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppCircle() Creates an instance of AppCircle with default settings. By default, the circle is initialized in an unfilled state. public AppCircle() AppCircle(Canvas, int, bool) Creates an instance of AppCircle with a specified canvas, radius, and filled state. public AppCircle(Canvas c, int radius, bool filled = false) Parameters c Canvas The canvas on which the circle will be drawn. radius int The radius of the circle. filled bool A boolean for circle should be filled or not. Methods CheckParameters(string[]) Ensures that the parameters provided for the circle command are valid. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] An array of strings representing command parameters. Exceptions CommandException Thrown if the parameter count is incorrect or the filled parameter cannot be parsed. Execute() Draws the circle on the associated canvas using the provided radius and filled state. public override void Execute()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppCommandFactory.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppCommandFactory.html",
    "title": "Class AppCommandFactory | Boose Project Documentation",
    "keywords": "Class AppCommandFactory Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a factory class for creating command objects. Extends the CommandFactory class to handle commands. public class AppCommandFactory : CommandFactory, ICommandFactory Inheritance object CommandFactory AppCommandFactory Implements ICommandFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeCommand(string) Returns a new instance of command class or, assign the command creation to the base MakeCommand() method. public override ICommand MakeCommand(string commandType) Parameters commandType string Command of type string. Returns ICommand The instance of viable command class."
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppElse.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppElse.html",
    "title": "Class AppElse | Boose Project Documentation",
    "keywords": "Class AppElse Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a custom implementation of the Else class, designed to override restrictions and provide additional flexibility. public class AppElse : Else, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Else AppElse Implements ICommand Inherited Members Else.CheckParameters(string[]) Else.Compile() Else.Execute() Else.CorrespondingEnd CompoundCommand.ReduceRestrictions() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppElse() Initializes a new instance of the AppElse class. Automatically reduces restrictions by invoking the ReduceRestrictions method. public AppElse() Methods Restrictions() Overrides the Restriction method from Else class. public override void Restrictions()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppEnd.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppEnd.html",
    "title": "Class AppEnd | Boose Project Documentation",
    "keywords": "Class AppEnd Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a custom implementation of the End class, designed to override restrictions. public class AppEnd : End, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand End AppEnd Implements ICommand Inherited Members End.Compile() End.Execute() CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppEnd() Initializes a new instance of the AppEnd class. Automatically reduces restrictions by invoking the ReduceRestrictions method. public AppEnd() Methods Restrictions() Overrides the Restrictions method of End class. Left empty to provide unrestricted behaviour. public override void Restrictions()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppFor.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppFor.html",
    "title": "Class AppFor | Boose Project Documentation",
    "keywords": "Class AppFor Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a custom implementation of a 'for loop' command, inheriting from the base For class. public class AppFor : For, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand For AppFor Implements ICommand Inherited Members For.Compile() For.Execute() For.LoopControlV For.From For.To For.Step ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppFor() Initializes a new instance of the AppFor class. This constructor sets up the base functionality for the custom 'for loop' command. public AppFor()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppIf.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppIf.html",
    "title": "Class AppIf | Boose Project Documentation",
    "keywords": "Class AppIf Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a custom implementation of an 'if' command, inheriting from the base If class. public class AppIf : If, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand If AppIf Implements ICommand Inherited Members CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.Compile() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppIf() Initializes a new instance of the AppIf class. public AppIf() Methods Restrictions() Overrides the Restrictions method. Left empty to allow for unrestricted behavior. public override void Restrictions()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppInt.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppInt.html",
    "title": "Class AppInt | Boose Project Documentation",
    "keywords": "Class AppInt Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a custom implementation of the 'Int' command, inheriting from the base Int class. public class AppInt : Int, ICommand Inheritance object Command Evaluation Int AppInt Implements ICommand Inherited Members Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppInt() Initializes a new instance of the AppInt class. Invokes the Restriction method to enforce custom restrictions when creating 'int' variabes. public AppInt() Methods Compile() Compiles the 'int' command, calling the base Int.Compile() method. public override void Compile() Execute() Executes the 'int' command, calling the base Int.Execute() method. public override void Execute() Restrictions() Applies restrictions to the creation of 'int' variables. public override void Restrictions() Exceptions RestrictionException Thrown when more than 1000 int variables are created."
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppMethod.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppMethod.html",
    "title": "Class AppMethod | Boose Project Documentation",
    "keywords": "Class AppMethod Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a custom implementation of the 'Method' command, inheriting from the base Method class. public class AppMethod : Method, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Method AppMethod Implements ICommand Inherited Members Method.CheckParameters(string[]) Method.Compile() Method.Execute() Method.LocalVariables Method.MethodName Method.Type CompoundCommand.ReduceRestrictions() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppParser.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppParser.html",
    "title": "Class AppParser | Boose Project Documentation",
    "keywords": "Class AppParser Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents the parser that processes and validates the syntax of a given program. public class AppParser : Parser, IParser Inheritance object Parser AppParser Implements IParser Inherited Members Parser.ParseCommand(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppParser(CommandFactory, StoredProgram) Initializes a new instance of the AppParser class. public AppParser(CommandFactory Factory, StoredProgram Program) Parameters Factory CommandFactory The command factory used to create commands. Program StoredProgram The stored program that the parser operates on. Methods ParseProgram(string) Parses the given program text and performs syntax validation. It processes the program line by line, identifying and handling commands. public override void ParseProgram(string program) Parameters program string The source code of the program to parse. Exceptions ParserException Thrown when the program contains syntax errors."
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppReal.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppReal.html",
    "title": "Class AppReal | Boose Project Documentation",
    "keywords": "Class AppReal Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a custom implementation of the 'Real' command, inheriting from the base class, Real. public class AppReal : Real, ICommand Inheritance object Command Evaluation Real AppReal Implements ICommand Inherited Members Real.Value Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppReal() Initializes a new instance of the AppReal class and enforces restrictions on the number of instances. public AppReal() Methods Compile() Compiles the real number variable, delegating to the base method for default behaviour. public override void Compile() Execute() Executes the real number variable logic, delegating to the base method for default behaviour. public override void Execute() Restrictions() Enforces a restriction on the number of real variables instances. public override void Restrictions() Exceptions RestrictionException Throws in the limit is exceeded."
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppRectangle.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppRectangle.html",
    "title": "Class AppRectangle | Boose Project Documentation",
    "keywords": "Class AppRectangle Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Defines a command to draw a rectangle on a specified canvas. Extends Rect class and introduces an option for specifying whether the rectangle is filled. public class AppRectangle : Rect, ICommand Inheritance object Command CanvasCommand CommandOneParameter Rect AppRectangle Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppRectangle() Default constructor that initializes the circle with the default filled state as false. public AppRectangle() AppRectangle(Canvas, int, int, bool) Initializes a new rectangle with specific dimensions and an optional filled state. public AppRectangle(Canvas c, int width, int height, bool filled = false) Parameters c Canvas Canvas where rectangle is drawn. width int The width of the rectangle. height int The height of the rectangle. filled bool Specifies whether the rectangle should be filled or not. Methods CheckParameters(string[]) Validates the parameters passed to the rectangle command. Ensures the rectangle dimensions and optional filled parameter are correct. Thrown if the number of parameters is incorrect or if the filled parameter is not a valid boolean value. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] Execute() Executes the rectangle drawing command by invoking the appropriate method on the canvas. The rectangle is drawn with the given width, height, and filled state. public override void Execute()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppStoredProgram.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppStoredProgram.html",
    "title": "Class AppStoredProgram | Boose Project Documentation",
    "keywords": "Class AppStoredProgram Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a stored program that executes a series of command on a canvas. Inherits from StoredProgram and adds execution cycle restrictions. public class AppStoredProgram : StoredProgram, IList, ICollection, IEnumerable, ICloneable, IStoredProgram Inheritance object ArrayList StoredProgram AppStoredProgram Implements IList ICollection IEnumerable ICloneable IStoredProgram Inherited Members StoredProgram.SyntaxOk StoredProgram.AddMethod(Method) StoredProgram.GetMethod(string) StoredProgram.AddVariable(Evaluation) StoredProgram.GetVariable(string) StoredProgram.GetVariable(int) StoredProgram.FindVariable(Evaluation) StoredProgram.FindVariable(string) StoredProgram.VariableExists(string) StoredProgram.GetVarValue(string) StoredProgram.UpdateVariable(string, int) StoredProgram.UpdateVariable(string, double) StoredProgram.UpdateVariable(string, bool) StoredProgram.DeleteVariable(string) StoredProgram.IsExpression(string) StoredProgram.EvaluateExpressionWithString(string) StoredProgram.EvaluateExpression(string) StoredProgram.Push(ConditionalCommand) StoredProgram.Pop() StoredProgram.Add(Command) StoredProgram.NextCommand() StoredProgram.ResetProgram() StoredProgram.Commandsleft() StoredProgram.PC ArrayList.Adapter(IList) ArrayList.Add(object) ArrayList.AddRange(ICollection) ArrayList.BinarySearch(int, int, object, IComparer) ArrayList.BinarySearch(object) ArrayList.BinarySearch(object, IComparer) ArrayList.Clear() ArrayList.Clone() ArrayList.Contains(object) ArrayList.CopyTo(Array) ArrayList.CopyTo(Array, int) ArrayList.CopyTo(int, Array, int, int) ArrayList.FixedSize(ArrayList) ArrayList.FixedSize(IList) ArrayList.GetEnumerator() ArrayList.GetEnumerator(int, int) ArrayList.GetRange(int, int) ArrayList.IndexOf(object) ArrayList.IndexOf(object, int) ArrayList.IndexOf(object, int, int) ArrayList.Insert(int, object) ArrayList.InsertRange(int, ICollection) ArrayList.LastIndexOf(object) ArrayList.LastIndexOf(object, int) ArrayList.LastIndexOf(object, int, int) ArrayList.ReadOnly(ArrayList) ArrayList.ReadOnly(IList) ArrayList.Remove(object) ArrayList.RemoveAt(int) ArrayList.RemoveRange(int, int) ArrayList.Repeat(object, int) ArrayList.Reverse() ArrayList.Reverse(int, int) ArrayList.SetRange(int, ICollection) ArrayList.Sort() ArrayList.Sort(IComparer) ArrayList.Sort(int, int, IComparer) ArrayList.Synchronized(ArrayList) ArrayList.Synchronized(IList) ArrayList.ToArray() ArrayList.ToArray(Type) ArrayList.TrimToSize() ArrayList.Capacity ArrayList.Count ArrayList.IsFixedSize ArrayList.IsReadOnly ArrayList.IsSynchronized ArrayList.this[int] ArrayList.SyncRoot object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppStoredProgram(ICanvas) Initializes a new instance of the AppStoreProgram class. public AppStoredProgram(ICanvas canvas) Parameters canvas ICanvas The ICanvas on which the program commands will be executed. Methods Run() Runs the stored program by executing each command in the program sequence. It limits the number of execution cycles to prevent infinite loops and handles exceptions thrown by commands. public override void Run() Exceptions RestrictionException Thrown when the program exceeds execution limits. StoredProgramException Thrown when the program encounters an exception during command execution."
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppTriangle.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppTriangle.html",
    "title": "Class AppTriangle | Boose Project Documentation",
    "keywords": "Class AppTriangle Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a command for drawing triangle on a canvas. public class AppTriangle : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters AppTriangle Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppTriangle(AppCanvas) Initializes a new instance of the AppTriangle class with the specified canvas. public AppTriangle(AppCanvas canvas) Parameters canvas AppCanvas Methods CheckParameters(string[]) Checks and parses the parameters required to draw the triangle. public override void CheckParameters(string[] parameter) Parameters parameter string[] An array of strings containing the width and height of the triangle. Execute() Executes the command to draw the triangle on the canvas. public override void Execute()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppWhile.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppWhile.html",
    "title": "Class AppWhile | Boose Project Documentation",
    "keywords": "Class AppWhile Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a 'while' loop command that executes a block of code as long as a specific condition is true. Inherits from While and includes restrictions on execution size. public class AppWhile : While, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand While AppWhile Implements ICommand Inherited Members CompoundCommand.ReduceRestrictions() CompoundCommand.CheckParameters(string[]) CompoundCommand.Compile() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppWhile() Initializes a new instance of the AppWhile class. Calls ReduceRestrictions() to set up the restrictions handling. public AppWhile() Methods Restriction() Checks if the execution count has exceeded the specified limit. public void Restriction() Exceptions RestrictionException Thrown when the variable limit exceeds the defined threshold."
  },
  "api/BiliyasMaharjan_ASE_Assignment.AppWrite.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AppWrite.html",
    "title": "Class AppWrite | Boose Project Documentation",
    "keywords": "Class AppWrite Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represents a command for writing text on the Canvas. Inherits from CommandOneParameter to process a single parameter (text). public class AppWrite : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter AppWrite Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppWrite() Initializes a new instance of the AppWrite class. public AppWrite() AppWrite(AppCanvas) Initializes a new instance of the AppWrite class with a specified canvas. public AppWrite(AppCanvas canvas) Parameters canvas AppCanvas The canvas on which the text will be written. Methods CheckParameters(string[]) Validates the parameters for the write command. Ensures that exactly one parameter is provided, which will be the text to write. public override void CheckParameters(string[] parameter) Parameters parameter string[] The array of parameters for the write command. Exceptions ParserException Thrown if the number of parameters is incorrect. Execute() Executes the command by writing the text on the canvas. The text is evaluated to process any embedded expressions before being written. public override void Execute()"
  },
  "api/BiliyasMaharjan_ASE_Assignment.AvailableCommands.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.AvailableCommands.html",
    "title": "Class AvailableCommands | Boose Project Documentation",
    "keywords": "Class AvailableCommands Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Singleton class that holds a list of available commands and their descriptions. Provides access to the list of commands through the Instance property. public class AvailableCommands Inheritance object AvailableCommands Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Commands Gets the list of available commands with their descriptions. public List<string> Commands { get; } Property Value List<string> Instance Gets the singleton instance of the AvailableCommands class. This ensures that only one instance of the class is created. public static AvailableCommands Instance { get; } Property Value AvailableCommands"
  },
  "api/BiliyasMaharjan_ASE_Assignment.Form1.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.Form1.html",
    "title": "Class Form1 | Boose Project Documentation",
    "keywords": "Class Form1 Namespace BiliyasMaharjan_ASE_Assignment Assembly BiliyasMaharjan-ASE-Assignment.dll Represent the main form of the application interacting with the canvas and executing commands. public class Form1 : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form Form1 Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Form1() Initializes a new instance of the Form1 class. Sets up the canvas, commandFactory, program, and parser components. public Form1() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/BiliyasMaharjan_ASE_Assignment.html": {
    "href": "api/BiliyasMaharjan_ASE_Assignment.html",
    "title": "Namespace BiliyasMaharjan_ASE_Assignment | Boose Project Documentation",
    "keywords": "Namespace BiliyasMaharjan_ASE_Assignment Classes AppArray Represents an application-specific implementation of the BOOSE Array class. AppCall Represents a custom implementation of the Call class, Designed to override restrictions. AppCanvas Implements the ICanvas interface and provides the functionality to implemented methods to draw circle, rectangle, set colors, managing the canvas and pen properties and write on the canvas. AppCircle A command class for drawing circles on a canvas, supporting both filled and outlined styles. AppCommandFactory Represents a factory class for creating command objects. Extends the CommandFactory class to handle commands. AppElse Represents a custom implementation of the Else class, designed to override restrictions and provide additional flexibility. AppEnd Represents a custom implementation of the End class, designed to override restrictions. AppFor Represents a custom implementation of a 'for loop' command, inheriting from the base For class. AppIf Represents a custom implementation of an 'if' command, inheriting from the base If class. AppInt Represents a custom implementation of the 'Int' command, inheriting from the base Int class. AppMethod Represents a custom implementation of the 'Method' command, inheriting from the base Method class. AppParser Represents the parser that processes and validates the syntax of a given program. AppReal Represents a custom implementation of the 'Real' command, inheriting from the base class, Real. AppRectangle Defines a command to draw a rectangle on a specified canvas. Extends Rect class and introduces an option for specifying whether the rectangle is filled. AppStoredProgram Represents a stored program that executes a series of command on a canvas. Inherits from StoredProgram and adds execution cycle restrictions. AppTriangle Represents a command for drawing triangle on a canvas. AppWhile Represents a 'while' loop command that executes a block of code as long as a specific condition is true. Inherits from While and includes restrictions on execution size. AppWrite Represents a command for writing text on the Canvas. Inherits from CommandOneParameter to process a single parameter (text). AvailableCommands Singleton class that holds a list of available commands and their descriptions. Provides access to the list of commands through the Instance property. Form1 Represent the main form of the application interacting with the canvas and executing commands."
  },
  "api/TestProject.Component2TestCases.html": {
    "href": "api/TestProject.Component2TestCases.html",
    "title": "Class Component2TestCases | Boose Project Documentation",
    "keywords": "Class Component2TestCases Namespace TestProject Assembly TestProject.dll Test class for Component 2 functionalities, including AppInt, AppReal, AppArray, and operations like if, while, for, method call, and exception handling. [TestClass] public class Component2TestCases Inheritance object Component2TestCases Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Setup() Initializes the required objects for testing. [TestInitialize] public void Setup() Test_For_Loop_No_Execution_With_Invalid_Start_End() Tests an invalid 'for' operation where the condition is not met. [ExpectedException(typeof(StoredProgramException), \"Infinite loop.\")] [TestMethod] public void Test_For_Loop_No_Execution_With_Invalid_Start_End() Test_InvalidDatatype_Throws_StoredProgramException() Tests invalid data type for array operation, expecting a StoredProgramException. [TestMethod] [ExpectedException(typeof(StoredProgramException), \"StoredProgram Exception occurred.\")] public void Test_InvalidDatatype_Throws_StoredProgramException() Test_Invalid_If_Operation() Tests an invalid 'if' operation where the condition is not met. [TestMethod] public void Test_Invalid_If_Operation() Test_Invalid_Method_Operation() Tests an invalid 'method' operation where the condition is not met. [ExpectedException(typeof(StoredProgramException), \"\")] [TestMethod] public void Test_Invalid_Method_Operation() Test_NoArraySize_Throws_ParserException() Tests missing array size declaration, expecting a ParserException. [TestMethod] [ExpectedException(typeof(ParserException), \"Expected Parser Exception occurred.\")] public void Test_NoArraySize_Throws_ParserException() Test_SetAndGetValue() Tests setting and getting the value of an integer variable. [TestMethod] public void Test_SetAndGetValue() Test_SetAndGetValue_For_Real() Tests setting and getting the value of a real (floating-point) variable. [TestMethod] public void Test_SetAndGetValue_For_Real() Test_SetAndGetVariableName() Tests setting and getting the variable name for an integer variable. [TestMethod] public void Test_SetAndGetVariableName() Test_SetAndGetVariableName_For_Real() Tests setting and getting the variable name for a real (floating-point) variable. [TestMethod] public void Test_SetAndGetVariableName_For_Real() Test_ValidArray_UpdatesVariable() Tests a valid array operation by updating a specific index and retrieving its value. [TestMethod] public void Test_ValidArray_UpdatesVariable() Test_Valid_For_Operation() Tests an valid 'for' operation where the condition is met. [TestMethod] public void Test_Valid_For_Operation() Test_Valid_If_Operation() Tests a valid 'if' operation where the condition is met. [TestMethod] public void Test_Valid_If_Operation() Test_Valid_Method_Operation() Tests an invalid 'method' operation where the condition is met. [TestMethod] public void Test_Valid_Method_Operation() Test_Valid_While_Operation() Tests an valid 'while' operation where the condition is met. [TestMethod] public void Test_Valid_While_Operation() Test_While_Condition_Not_Met() Tests an invalid 'while' operation where the condition is not met. [TestMethod] public void Test_While_Condition_Not_Met()"
  },
  "api/TestProject.Test1.html": {
    "href": "api/TestProject.Test1.html",
    "title": "Class Test1 | Boose Project Documentation",
    "keywords": "Class Test1 Namespace TestProject Assembly TestProject.dll Provides unit tests for the AppCanvas class functionality. Tests cover methods related to movement, drawing, and shape creation to ensure proper validation and behavior. [TestClass] public sealed class Test1 Inheritance object Test1 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods Circle_InvalidRadius_ThrowsException() Tests that the AppCanvas.Circle() method throws a CanvasException for an invalid (negative) radius. [TestMethod] [ExpectedException(typeof(CanvasException))] public void Circle_InvalidRadius_ThrowsException() Circle_ValidRadius_Draw() Tests that the AppCanvas.Circle() method successfully draws a circle with a valid radius. [TestMethod] public void Circle_ValidRadius_Draw() DrawTo_NegativeCoordinates_ThrowsException() Tests that the AppCanvas.DrawTo() method throws a CanvasException for negative coordinates. [TestMethod] [ExpectedException(typeof(CanvasException), \"Negative coordinates given.\")] public void DrawTo_NegativeCoordinates_ThrowsException() DrawTo_OutOfBoundsCoordinates_ThrowsException() Tests that the AppCanvas.DrawTo90 method throws a CanvasException for coordinates outside the canvas bounds. [TestMethod] [ExpectedException(typeof(CanvasException), \"Out of Bound coordinates given.\")] public void DrawTo_OutOfBoundsCoordinates_ThrowsException() DrawTo_ValidCoordinates_UpdatesPosition() Tests that the AppCanvas.DrawTo() method correctly updates the canvas position for valid coordinates. [TestMethod] public void DrawTo_ValidCoordinates_UpdatesPosition() MoveTo_NegativeCoordinates_ThrowsException() Tests that the AppCanvas.MoveTo() method throws a CanvasException for negative coordinates. [TestMethod] [ExpectedException(typeof(CanvasException), \"Negative coordinates given.\")] public void MoveTo_NegativeCoordinates_ThrowsException() MoveTo_OutOfBoundsCoordinates_ThrowsException() Tests that the AppCanvas.MoveTo() method throws a CanvasException for coordinates outside the canvas bounds. [TestMethod] [ExpectedException(typeof(CanvasException), \"OutOfBound coordinates.\")] public void MoveTo_OutOfBoundsCoordinates_ThrowsException() MoveTo_ValidCoordinates_UpdatesPosition() Tests that the AppCanvas.MoveTo() method correctly updates the canvas position for valid coordinates. [TestMethod] public void MoveTo_ValidCoordinates_UpdatesPosition() MultiLineCommand() Tests moveto, drawto, circle, rect, write methods with valid parameters. [TestMethod] public void MultiLineCommand() Rectangle_NegativeSides_ThrowsException() Tests that the AppCanvas.Rect() method throws a CanvasException for invalid (negative) dimensions. [TestMethod] [ExpectedException(typeof(CanvasException))] public void Rectangle_NegativeSides_ThrowsException() Rectangle_ValidSides_Draw() Tests that the AppCanvas.Rect() method successfully draws a rectangle with valid dimensions. [TestMethod] public void Rectangle_ValidSides_Draw() Setup() Initializes a new instance of the canvas and sets default properties before each test. [TestInitialize] public void Setup() Write_InvalidParameters_ThrowsException() Tests for the CanvasException for empty parameter passed for write command. [TestMethod] [ExpectedException(typeof(CanvasException))] public void Write_InvalidParameters_ThrowsException() Write_ValidParameters() Test method for valid parameters for write command. [TestMethod] public void Write_ValidParameters()"
  },
  "api/TestProject.html": {
    "href": "api/TestProject.html",
    "title": "Namespace TestProject | Boose Project Documentation",
    "keywords": "Namespace TestProject Classes Component2TestCases Test class for Component 2 functionalities, including AppInt, AppReal, AppArray, and operations like if, while, for, method call, and exception handling. Test1 Provides unit tests for the AppCanvas class functionality. Tests cover methods related to movement, drawing, and shape creation to ensure proper validation and behavior."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Boose Project Documentation",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Boose Project Documentation",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Boose Project Documentation",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}